# -*- coding: utf-8 -*-
"""Augmentation.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1hsJD4Kg-hxP1PuW1NfmFBhigYQ-8T8zn
"""

!pip install audiomentations

import librosa
import numpy as np
import soundfile as sf
import pandas as pd
import os
from audiomentations import PitchShift,AddBackgroundNoise,PitchShift,BandPassFilter,AddGaussianSNR,AirAbsorption,HighPassFilter,TimeStretch,AddGaussianNoise,AddShortNoises,PolarityInversion,GainTransition,Compose

data_df = pd.read_csv("/content/drive/MyDrive/Tadekam/TadEkam_App/Dataset/japa/labels/japa.csv")
data_df=data_df.drop(['Unnamed: 2','Unnamed: 3','Unnamed: 4','Unnamed: 5','Unnamed: 6','Unnamed: 7'],axis =1)
root_path="/content/drive/MyDrive/Tadekam/TadEkam_App/Dataset/japa/audio/"

#function to load the dataset
def load_data(data_df,root_path):
     #newfilename=[]
     for column in data_df.columns[0:1]:
       temp=root_path+data_df[column]+'.wav'
       data_df['filenames'] = pd.Series(temp)
     data_df=data_df.drop('filename',axis=1)
     data_df_new=data_df.iloc[:,[1,0]]

     return data_df_new

file_list=[]
label_list=[]
temppp=[]
tempp2=[]

#function for data augmentation
def augmentation(data_df_new):
  i=0
  gaussian_noise= AddGaussianSNR(min_snr_in_db=3.0,max_snr_in_db=50.0,p=1.0)
  backnoise = transform = AddBackgroundNoise(sounds_path="/content/drive/MyDrive/Tadekam/TadEkam_App/Dataset/japa/Augmentors",min_snr_in_db=2.0,max_snr_in_db=20.0,noise_transform=PolarityInversion(),p=1.0)
  time_streach = TimeStretch(leave_length_unchanged=False,p=1.0)
  air_abs = AirAbsorption(min_temperature = 10.0, max_temperature= 20.0, min_humidity= 40.0, max_humidity= 90.0, min_distance = 1.0, max_distance = 60.0, p = 1.0)
  short_noise = AddShortNoises(sounds_path='/content/drive/MyDrive/Tadekam/TadEkam_App/Dataset/japa/short_noise', min_snr_in_db= 3.0, max_snr_in_db =12.0,p=1.0)
  BandPass = BandPassFilter(min_center_freq = 120.0, max_center_freq=1200.0,min_bandwidth_fraction = 0.6,max_bandwidth_fraction = 1.6,min_rolloff= 6, max_rolloff = 12, zero_phase= False, p=1)

  for index,row in data_df_new.iterrows():
    signal,sr =librosa.load(row['filenames'])
    aug_signal = gaussian_noise(signal,sr)
    aug_signal1 = backnoise(signal,sr)
    aug_signal2 = time_streach(signal,sr)
    aug_signal3 = air_abs(signal,sr)
    aug_signal4 = short_noise(signal,sr)
    aug_signal5 = BandPass(signal,sr)

    i=i+1
    sf.write('/content/drive/MyDrive/Tadekam/TadEkam_App/Dataset/japa/audio/'+ '_Aug_backnoise_' + row['label'] + str(i) + '.wav',aug_signal1,sr)
    a ='_Aug_backnoise_' + row['label'] + str(i) + '.wav'
    file_list.append(a)
    label_list.append(row['label'])

    sf.write('/content/drive/MyDrive/Tadekam/TadEkam_App/Dataset/japa/audio/'+'_Aug_gaussnoise_' +  row['label'] + str(i) + '.wav',aug_signal,sr)
    b = '_Aug_gaussnoise_' +  row['label'] + str(i) + '.wav'
    file_list.append(b)
    label_list.append(row['label'])

    sf.write('/content/drive/MyDrive/Tadekam/TadEkam_App/Dataset/japa/audio/'+'_Aug_time_stre_' +  row['label'] + str(i) + '.wav',aug_signal2,sr)
    c = '_Aug_time_stre_' +  row['label'] + str(i) + '.wav'
    file_list.append(c)
    label_list.append(row['label'])

    sf.write('/content/drive/MyDrive/Tadekam/TadEkam_App/Dataset/japa/audio/'+ '_AirAbsorption_' +  row['label'] + str(i) + '.wav',aug_signal3,sr)
    d = '_AirAbsorption_' +  row['label'] + str(i) + '.wav'
    file_list.append(d)
    label_list.append(row['label'])

    sf.write('/content/drive/MyDrive/Tadekam/TadEkam_App/Dataset/japa/audio/'+ '_short_noise_' +  row['label'] + str(i) + '.wav',aug_signal4,sr)
    e = '_short_noise_' +  row['label'] + str(i) + '.wav'
    file_list.append(d)
    label_list.append(row['label'])

    sf.write('/content/drive/MyDrive/Tadekam/TadEkam_App/Dataset/japa/audio/'+ '_BandPass_' +  row['label'] + str(i) + '.wav',aug_signal5,sr)
    f = '_BandPass_' +  row['label'] + str(i) + '.wav'
    file_list.append(d)
    label_list.append(row['label'])

  return "Augmentation_Done"

data_df_new=load_data(data_df,root_path)
aug =augmentation(data_df_new)
print(aug)

#code for combining the old and augmentated data

for index,row in data_df_new.iterrows():
    basename1 = os.path.basename(row['filenames'])
    basename2 = os.path.basename(row['label'])
    temppp.append(basename1)
    tempp2.append(basename2)
df_temp = pd.DataFrame(list(zip(temppp, tempp2)),
               columns =['filenames', 'label'])


df_aug = pd.DataFrame(list(zip(file_list, label_list)),
               columns =['filenames', 'label'])
  
final_df=df_temp.append(df_aug, ignore_index = True)
final_df

final_df.to_csv('/content/sample_data/final_data.csv')
